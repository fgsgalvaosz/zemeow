services:
  # PostgreSQL - Banco de dados principal
  postgres:
    image: postgres:15-alpine
    container_name: zemeow_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-zemeow}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - zemeow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-zemeow}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO - Armazenamento de mídias
  minio:
    image: minio/minio:latest
    container_name: zemeow_minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    networks:
      - zemeow_network

  # Opcional: DbGate para administração do banco
  dbgate:
    image: dbgate/dbgate:latest
    container_name: zemeow_dbgate
    restart: unless-stopped
    environment:
      CONNECTIONS: con1,con2
      LABEL_con1: ZeMeow PostgreSQL
      SERVER_con1: postgres
      USER_con1: ${POSTGRES_USER:-postgres}
      PASSWORD_con1: ${POSTGRES_PASSWORD:-password}
      PORT_con1: 5432
      ENGINE_con1: postgres@dbgate-plugin-postgres
      
      LABEL_con2: ZeMeow Redis
      SERVER_con2: redis
      USER_con2:
      PASSWORD_con2:
      PORT_con2: 6379
      ENGINE_con2: redis@dbgate-plugin-redis
    ports:
      - "${DBGATE_PORT:-3000}:3000"
    networks:
      - zemeow_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Redis - Cache e sessões
  redis:
    image: redis:7-alpine
    container_name: zemeow_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - zemeow_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Webhook Tester - Ferramenta para testar webhooks durante desenvolvimento
  webhook-tester:
    image: tarampampam/webhook-tester:2
    container_name: zemeow_webhook_tester
    restart: unless-stopped
    ports:
      - "${WEBHOOK_TESTER_PORT:-8085}:8080"
    networks:
      - zemeow_network
    environment:
      - LOG_LEVEL=debug
      - LOG_FORMAT=console
      - AUTO_CREATE_SESSIONS=true
    command: ["serve", "--addr", "0.0.0.0", "--port", "8080"]

volumes:
  postgres_data:
  minio_data:
  redis_data:

networks:
  zemeow_network: