package routes

import (
	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/swagger"

	"github.com/felipe/zemeow/internal/api/handlers"
	"github.com/felipe/zemeow/internal/api/middleware"
	"github.com/felipe/zemeow/internal/api/validators"

	_ "github.com/felipe/zemeow/docs" // docs is generated by Swag CLI, you have to import it.
)


type Router struct {
	app                *fiber.App
	authMiddleware     *middleware.AuthMiddleware
	validationMiddleware *validators.ValidationMiddleware
	sessionHandler     *handlers.SessionHandler
	messageHandler     *handlers.MessageHandler
	webhookHandler     *handlers.WebhookHandler
	groupHandler       *handlers.GroupHandler
}


type RouterConfig struct {
	AuthMiddleware     *middleware.AuthMiddleware
	SessionHandler     *handlers.SessionHandler
	MessageHandler     *handlers.MessageHandler
	WebhookHandler     *handlers.WebhookHandler
	GroupHandler       *handlers.GroupHandler
}


func NewRouter(app *fiber.App, config *RouterConfig) *Router {
	return &Router{
		app:                app,
		authMiddleware:     config.AuthMiddleware,
		validationMiddleware: validators.NewValidationMiddleware(),
		sessionHandler:     config.SessionHandler,
		messageHandler:     config.MessageHandler,
		webhookHandler:     config.WebhookHandler,
		groupHandler:       config.GroupHandler,
	}
}


func (r *Router) SetupRoutes() {

	r.setupGlobalMiddleware()


	r.setupSwaggerRoutes()


	r.setupHealthRoutes()


	r.setupSessionRoutes()


	r.setupWebhookRoutes()
}


func (r *Router) setupSwaggerRoutes() {

	config := swagger.Config{
		URL:         "doc.json",
		DeepLinking: false,
		DocExpansion: "list",
	}


	r.app.Get("/swagger/*", swagger.New(config))


	r.app.Get("/docs/*", swagger.New(config))


	r.app.Get("/swagger", func(c *fiber.Ctx) error {
		return c.Redirect("/swagger/index.html", 301)
	})
}