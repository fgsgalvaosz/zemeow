version: '3.8'

# Docker Compose para Produção
# Contém todos os serviços incluindo a aplicação ZeMeow
# Use: make prod ou docker-compose up -d

services:
  # ZeMeow API - Aplicação principal
  zemeow:
    image: zemeow-zemeow:latest
    container_name: zemeow_api
    restart: unless-stopped
    environment:
      # Database - usando nomes corretos que o código espera
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-your_database_name}
      - POSTGRES_USER=${POSTGRES_USER:-your_db_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_secure_password}
      - POSTGRES_SSLMODE=disable

      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_redis_password}

      # MinIO
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-your_minio_user}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-your_minio_password}
      - MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=your-media-bucket

      # API
      - ADMIN_API_KEY=${ADMIN_API_KEY:-my-super-secret-api-key}
      - SERVER_PORT=8080
    ports:
      - "${API_PORT:-8080}:8080"
    volumes:
      - ./sessions:/app/sessions
      - ./logs:/app/logs
    networks:
      - zemeow_network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL - Banco de dados principal
  postgres:
    image: postgres:15-alpine
    container_name: zemeow_postgres_prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-your_database_name}
      POSTGRES_USER: ${POSTGRES_USER:-your_db_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Removido o script init.sql pois as migrações são feitas pela aplicação
    networks:
      - zemeow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-your_db_user} -d ${POSTGRES_DB:-your_database_name}"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Opcional: DbGate para administração do banco
  dbgate:
    image: dbgate/dbgate:latest
    container_name: zemeow_dbgate
    restart: unless-stopped
    environment:
      CONNECTIONS: con1
      LABEL_con1: ZeMeow PostgreSQL
      SERVER_con1: postgres
      USER_con1: ${POSTGRES_USER:-your_db_user}
      PASSWORD_con1: ${POSTGRES_PASSWORD:-your_secure_password}
      PORT_con1: 5432
      ENGINE_con1: postgres@dbgate-plugin-postgres
    ports:
      - "${DBGATE_PORT:-3000}:3000"
    networks:
      - zemeow_network
    depends_on:
      postgres:
        condition: service_healthy


  # Redis - Cache e sessões
  redis:
    image: redis:7-alpine
    container_name: zemeow_redis_prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-your_redis_password}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-your_redis_password}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - zemeow_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # MinIO para armazenamento de mídias do WhatsApp
  minio:
    image: quay.io/minio/minio:RELEASE.2024-01-13T07-53-03Z-cpuv1
    container_name: zemeow_minio_prod
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-your_minio_user}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-your_minio_password}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_BROWSER_REDIRECT_URL:-http://127.0.0.1:9001}
      - MINIO_SERVER_URL=${MINIO_SERVER_URL:-http://127.0.0.1:9000}
      - MINIO_BROWSER=on
      - MINIO_DOMAIN=127.0.0.1
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    networks:
      - zemeow_network
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    #   interval: 30s
    #   timeout: 20s
    #   retries: 3
    #   start_period: 30s

  # Cliente MinIO para configuração inicial
  minio-client:
    image: minio/mc:latest
    container_name: zemeow_minio_client_dev
    restart: "no"
    depends_on:
      - minio
    networks:
      - zemeow_network
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      mc alias set minio http://minio:9000 ${MINIO_ROOT_USER:-your_minio_user} ${MINIO_ROOT_PASSWORD:-your_minio_password};
      mc mb minio/your-media-bucket --ignore-existing;
      mc policy set public minio/your-media-bucket;
      mc admin info minio;
      echo 'MinIO setup completed successfully';
      "

volumes:
  postgres_data:
    driver: local
    name: zemeow_postgres_prod_data
  minio_data:
    driver: local
    name: zemeow_minio_prod_data
  redis_data:
    driver: local
    name: zemeow_redis_prod_data

networks:
  zemeow_network:
    driver: bridge